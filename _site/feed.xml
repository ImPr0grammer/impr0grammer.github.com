<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pr0grammer</title>
    <description>Tips and Tricks for Software Engineers and Data Scientists. Python, Scala, Tensorflow, Deep Learning, etc.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 18 Jun 2018 18:10:28 +0300</pubDate>
    <lastBuildDate>Mon, 18 Jun 2018 18:10:28 +0300</lastBuildDate>
    <generator>Jekyll v3.8.3</generator>
    
      <item>
        <title>Named tuples in Python</title>
        <description>&lt;p&gt;Today I want to talk about tuples. 
Out code with tuples usually looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calculate_invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Additional Information&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tuples are very convenient, epecially in scripts and small prototypes.
But even here it’s hard to understand what’s going on in the code.
And it’s much harder to read large code with tuples.&lt;/p&gt;

&lt;p&gt;What should we use instead, Classes?
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;There is an elegant solution in Python - &lt;b&gt;namedtuple&lt;/b&gt; &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt; see python 3 docs&lt;/a&gt;.
Namedtuple - is tuple with specified name. Every field name is also specified.
So it’s similar to original tuples but it makes code much more clear.&lt;/p&gt;

&lt;p&gt;Let’s rewrite orinial code to see how it works.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;namedtuple&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Invoice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;namedtuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Invoice'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'days'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'cost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'additional_info'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calculate_invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Additional Information&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculate_invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can see that this code is much easier to read!&lt;/p&gt;

&lt;p&gt;Fiew more things to now:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Namedtuple is readonly you can’t change with “normal” code.&lt;/li&gt;
  &lt;li&gt;There is a convenient method &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.somenamedtuple._replace&quot;&gt;_replace&lt;/a&gt;. Using it you can change one field’s value and get a new tuple.&lt;/li&gt;
  &lt;li&gt;There is a useful &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.somenamedtuple._asdict&quot;&gt;_asdict&lt;/a&gt; that returns dictionary.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Try namedtuple in the next project if it fits you.&lt;/p&gt;

&lt;p&gt;Stay tuned, check out &lt;a href=&quot;https://impr0grammer.github.io&quot;&gt;my blog&lt;/a&gt; for more usefull tips and tricks.&lt;/p&gt;

</description>
        <pubDate>Mon, 18 Jun 2018 17:23:19 +0300</pubDate>
        <link>http://localhost:4000/2018/06/18/nametuples.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/06/18/nametuples.html</guid>
        
        <category>python</category>
        
        <category>programming</category>
        
        <category>python-tips</category>
        
        
      </item>
    
      <item>
        <title>Welcome!</title>
        <description>&lt;p&gt;Hi all, this is my personal blog. 
You’ll find a lot of usefull information in my blog about Programming and Data Science.
Some tips for better language usage, tips how to pass code interview, overview of state-of-the-art approaches in ML and other usefull information
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Stay tuned, check out &lt;a href=&quot;https://impr0grammer.github.io&quot;&gt;my blog&lt;/a&gt; for new usefull advices.&lt;/p&gt;

</description>
        <pubDate>Sun, 17 Jun 2018 14:16:19 +0300</pubDate>
        <link>http://localhost:4000/2018/06/17/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/06/17/welcome-to-jekyll.html</guid>
        
        <category>blog</category>
        
        <category>programming</category>
        
        
      </item>
    
  </channel>
</rss>
